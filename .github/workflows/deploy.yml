name: CD Deploy

permissions:
  contents: read
  packages: write # allow pushing to GHCR

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/ci-tests.yml

  build:
    name: Build & Push Images
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [server, client]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service }}
          file: infrastructure/docker/${{ matrix.service }}.Dockerfile
          push: true
          tags: ghcr.io/jsonmason/ladle-${{ matrix.service }}:latest

  deploy:
    name: Deploy to Droplet
    needs: build
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.0"

      - name: Terraform Init
        working-directory: infrastructure/terraform/envs/dev
        run: terraform init -upgrade -input=false

      - name: Get Droplet IP
        id: droplet_ip
        working-directory: infrastructure/terraform/envs/dev
        run: echo "droplet_ip=$(terraform output -raw ladle_public_ip)" >> $GITHUB_OUTPUT

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.droplet_ip.outputs.droplet_ip }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          REMOTE_HOST: ${{ steps.droplet_ip.outputs.droplet_ip }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          chmod +x infrastructure/cicd/deploy.sh
          infrastructure/cicd/deploy.sh
