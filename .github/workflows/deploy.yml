name: CD Deploy

permissions:
  contents: read
  packages: write # allow pushing to GHCR

on:
  push:
    branches:
      - main

jobs:
  test:
    uses: ./.github/workflows/ci-tests.yml

  deploy:
    name: Deploy to Droplet
    needs: test
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v6
        with:
          context: server
          file: infrastructure/docker/server.Dockerfile
          push: true
          tags: ghcr.io/jsonmason/ladle-server:latest

      - name: Build and push client image
        uses: docker/build-push-action@v6
        with:
          context: client
          file: infrastructure/docker/client.Dockerfile
          push: true
          tags: ghcr.io/jsonmason/ladle-client:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.0"

      - name: Terraform Init
        run: terraform init -upgrade -input=false
        working-directory: infrastructure/terraform/envs/dev

      - name: Get Droplet IP
        id: droplet_ip
        run: echo "droplet_ip=$(terraform output -raw droplet_ip)" >> $GITHUB_OUTPUT
        working-directory: infrastructure/terraform/envs/dev

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ steps.droplet_ip.outputs.droplet_ip }} >> ~/.ssh/known_hosts

      - name: Write .env to server
        run: |
          ssh root@${{ steps.droplet_ip.outputs.droplet_ip }} bash << 'SSH_EOF'
          cat > /opt/ladle-app/infrastructure/docker/.env << 'EOF'
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          EOF
          SSH_EOF

      - name: Deploy via SSH
        env:
          REMOTE_HOST: ${{ steps.droplet_ip.outputs.droplet_ip }}
        run: |
          chmod +x infrastructure/cicd/deploy.sh
          infrastructure/cicd/deploy.sh
